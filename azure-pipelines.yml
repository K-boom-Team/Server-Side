# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  name: default
  demands: agent.os -equals Windows_NT
  # vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Kboom Api"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# - task: SonarQubePrepare@5
#   inputs:
#     SonarQube: 'SonarQube-Kboom'
#     scannerMode: 'MSBuild'
#     projectKey: '1a0ace25b2e8befdf451f95ebdae6e354c0e57d4'
#     projectName: 'kboom-terapic'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     projects: '**/*.sln'

# # Run Code Analysis task
# - task: SonarQubeAnalyze@5

# # Publish Quality Gate Result task
# - task: SonarQubePublish@5
#   inputs:
#     pollingTimeoutSec: '300'


- task: CmdLine@2
  displayName: 'Install Sonar Tools and Start Scanner'
  inputs:
    script: |
      echo Installing sonarScanner tool
      dotnet tool install --global dotnet-sonarscanner 

      echo Start Scanner
      dotnet-sonarscanner begin /k:"kboom-terapic" /d:sonar.host.url="http://localhost:9000" /d:sonar.login="1a0ace25b2e8befdf451f95ebdae6e354c0e57d4"

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.sln'

- task: CmdLine@2
  displayName: 'Collect Sonar results and Upload'
  inputs:
    script: |
      echo Run Sonar End
      dotnet-sonarscanner end /d:sonar.login="1a0ace25b2e8befdf451f95ebdae6e354c0e57d4"

- task: PublishBuildArtifacts@1
